unit uCadCategoria;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHeranca, Data.DB, Data.Win.ADODB,
  System.Actions, Vcl.ActnList, System.ImageList, Vcl.ImgList, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls, Vcl.Buttons, Vcl.DBCtrls,
  Vcl.ExtCtrls;

type
  TfCadCategoria = class(TfTelaHeranca)
    adoCategoria: TADOQuery;
    DataSource1: TDataSource;
    StatusBar1: TStatusBar;
    procedure FormShow(Sender: TObject);
    //procedure dbgListagemDblClick(Sender: TObject);
    procedure dbgListagemTitleClick(Column: TColumn);
    procedure btnPesquisarClick(Sender: TObject);

  private
    procedure pegaDados;
    procedure ExibirLabelIndice(Campo: String; aLabel: TLabel);
    function RetornaCampoTraduzido(Campo: String): String;
    { Private declarations }
  public
    { Public declarations }
    IndiceAtual: string;
  end;

var
  fCadCategoria: TfCadCategoria;

implementation

{$R *.dfm}

uses uDM;

{ TfCadCategoria }

// Ordenar as colunas do dbGrid
procedure TfCadCategoria.btnPesquisarClick(Sender: TObject);
begin
  inherited;
  pegaDados;
end;

procedure TfCadCategoria.dbgListagemTitleClick(Column: TColumn);
begin
  inherited;
  //IndiceAtual := Column.Field.FieldName;

  // Verifica se o campo é válido
  if not Assigned(Column.Field) then Exit;

  // Alterna entre ASC e DESC
  if SameText(Trim(adoCategoria.Sort), Column.Field.FieldName + ' ASC') then
    adoCategoria.Sort := Column.Field.FieldName + ' DESC'
  else
    adoCategoria.Sort := Column.Field.FieldName + ' ASC';

  // lblIndice.Caption := RetornaCampoTraduzido(Column.Field.FieldName);  trocou pela de baixo
  ExibirLabelIndice(Column.Field.FieldName, lblIndice);

end;

procedure TfCadCategoria.ExibirLabelIndice(Campo: String; aLabel: TLabel);
begin
  aLabel.Caption := RetornaCampoTraduzido(Campo);
end;

procedure TfCadCategoria.FormShow(Sender: TObject);
begin
  inherited;
  pegaDados;
  lblIndice.Caption := 'Descrição';
end;

procedure TfCadCategoria.pegaDados;
var
  filtro: string;
  I: integer;
  totalEquipamentos: integer;
begin
  filtro := '';

 if edtPesquisar.Text <> '' then
  filtro := 'where descricao like ' + QuotedStr('%' + edtPesquisar.Text + '%');


  with adoCategoria do
  begin
    close;
    sql.Text := 'select * from categoria ' + filtro;
    open;

    FieldByName('id').DisplayLabel := 'ID';
    FieldByName('id').DisplayWidth := 5;
    FieldByName('descricao').DisplayLabel := 'Descrição';
    FieldByName('descricao').DisplayWidth := 15;
    for I := 0 to dbgListagem.Columns.Count -1  do
    begin
      dbgListagem.Columns[I].Alignment := taCenter;
      dbgListagem.Columns[I].Title.Alignment := taCenter;
    end;

    //trazer o total de equipamentos
    StatusBar1.Panels[1].Text := IntToStr(adoCategoria.RecordCount);

  end;
end;

// Responsável por verificar a coluna que eu cliquei para que o lbl fique com o mesmo titulo
function TfCadCategoria.RetornaCampoTraduzido(Campo: String): String;
Var
  I : integer;
begin
  for I := 0 to adoCategoria.Fields.Count -1 do
  begin
    if adoCategoria.Fields[i].FieldName = campo then
    begin
      Result := adoCategoria.Fields[i].DisplayLabel;
      break;
    end;

  end;

end;

end.
